group_by(stationname) %>%
summarize(n = n(),
min_date = min(date),
max_date = max(date),
min_rides = min(rides),
max_rides = max(rides),
mean_rides = round(mean(rides),4), #round so sci notation isn't displayed.
sd_rides = sd(rides)) %>%
arrange(desc(mean_rides))  #arrange in descending order so we can answer ? #1
# CTA_Ridership %>%
#   mutate(date = as.Date(parse_date_time(date, orders = "m/d/y"))) %>%
#   mutate(DOW = wday(date,label = T)) %>%
#   group_by(daytype,DOW) %>%
#   summarize(n = n())
#
#display top 5
summary_CTA_Ridership %>%
top_n(5,mean_rides)
summary_CTA_Ridership %>%
filter(stationname == 'Washington/Wabash')
summary_CTA_Ridership %>%
mutate(COV = sd_rides/mean_rides) %>%
select(stationname,mean_rides,sd_rides,COV) %>%
arrange(desc(COV)) %>%
mutate(rank = row_number()) %>%
top_n(10,COV)
summary_CTA_Ridership %>%
mutate(COV = sd_rides/mean_rides) %>%
select(stationname,mean_rides,sd_rides,COV) %>%
arrange(desc(COV)) %>%
mutate(rank = row_number()) %>%
filter(stationname == 'Washington/Wabash')
summary_CTA_Ridership %>%
select(stationname,mean_rides,sd_rides) %>%
arrange(desc(sd_rides)) %>%
mutate(rank = row_number()) %>%
filter(stationname == 'Washington/Wabash')
summary_CTA_Ridership %>%
filter(stationname == 'Washington/Wabash')
CTA_Ridership %>%
mutate(date = as.Date(parse_date_time(date, orders = "m/d/y"))) %>%
filter(stationname == 'Washington/Wabash') %>%
group_by(stationname,daytype)
CTA_Ridership %>%
mutate(date = as.Date(parse_date_time(date, orders = "m/d/y"))) %>%
filter(stationname %in% c('Washington/Wabash','UIC-Halsted','Clark/Lake')) %>%
filter(date >= '2010-01-01') %>%
ggplot(aes(x = date, y = rides,color = stationname, size = stationname)) +
geom_line() +
theme_bw() +
scale_color_manual(values = c("grey80","#c9d2e0", "#0063ff"))+
scale_size_manual(values = c(.1,.1,.1)) +
ggtitle("Washington/Wabash station compared to two similar stations.")
#this code was needed once just to get the coordinates.
# library(googleway)
# key <- "This is where my Google Maps API key went"
# # Add "station chicago, IL" to the stationname so we get the right location returned from google.
# station_lookup_names <- paste(unique(CTA_Ridership$stationname), "station chicago, IL")
# station_geocodes <- map_df(station_lookup_names, function(x) data.frame(location_name = x,google_geocode(x, key = key)$results$geometry$location))
#
# write.csv(station_geocodes, file = 'source_data/station_coordinates.csv')
#load the coordinates file we saved.
station_coordinates <- read_csv("source_data/station_coordinates.csv")
head(station_coordinates)
Chicago_Business_Licenses <- read.csv('source_data/Business_Licenses_-_Current_Active.csv')
Business_Activity_Types_List <-   c('Tavern - Consumption of Liquor on Premise','Sale of Food Prepared Onsite Without Dining Area','Sale of Liquor Outdoors on Private Property','Consumption of Liquor on Premises','Consumption of Liquor on Premises','Preparation of Food and Dining on Premise With Seating','Sale of Food Prepared Onsite With Dining Area')
Chicago_Restaurants_and_Bars <- Chicago_Business_Licenses %>%
filter(BUSINESS.ACTIVITY %in% Business_Activity_Types_List) %>%
select(DOING.BUSINESS.AS.NAME,BUSINESS.ACTIVITY,LATITUDE,LONGITUDE) %>%
rename(DBA_Name = DOING.BUSINESS.AS.NAME, business_activity = BUSINESS.ACTIVITY, lat = LATITUDE, lng = LONGITUDE) %>%
distinct()
head(Chicago_Restaurants_and_Bars)
business_license_types <- levels(Chicago_Restaurants_and_Bars$business_activity)
business_license_types
unique(as.character(Chicago_Restaurants_and_Bars$business_activity))
library(shiny)
library(ggmap)
?sliderInput
station_coordinates %>%
mutate(stationname = str_replace(location_name, " station chicago, IL","")) %>%
select(stationname, lat, lng)
CTA_Ridership %>%
mutate(date = as.Date(parse_date_time(date, orders = "m/d/y"))) %>%
mutate(DOW = wday(date,label = T)) %>%
mutate(day_type = case_when(
DOW %in% c('Sat','Sun') ~ 'Weekend',
T ~ "Weekday"
))
CTA_Ridership %>%
mutate(date = as.Date(parse_date_time(date, orders = "m/d/y"))) %>%
mutate(DOW = wday(date,label = T)) %>%
mutate(day_type = case_when(
DOW %in% c('Sat','Sun') ~ 'Weekend',
T ~ "Weekday"
)) %>%
inner_join(station_coordinates_clean)
station_coordinates_clean <- station_coordinates %>%
mutate(stationname = str_replace(location_name, " station chicago, IL","")) %>%
select(stationname, lat, lng)
CTA_Ridership %>%
mutate(date = as.Date(parse_date_time(date, orders = "m/d/y"))) %>%
mutate(DOW = wday(date,label = T)) %>%
mutate(day_type = case_when(
DOW %in% c('Sat','Sun') ~ 'Weekend',
T ~ "Weekday"
)) %>%
inner_join(station_coordinates_clean)
?get_map
myMap <- get_map(location="Chicago", source="stamen", maptype="toner", crop=FALSE)
myMap <- get_map(location="Chicago", source="hybrid", maptype="toner", crop=FALSE)
myMap <- get_map(location="Chicago", source="google", maptype="hybrid", crop=FALSE)
myMap <- get_map(location="Chicago", source="osm")
myMap <- get_map(location="Chicago", source="cloudmade")
myMap <- get_map(location="Chicago", source="stamen")
myMap <- get_map(location="Chicago", source="osm")
register_google(key = "AIzaSyANIejhd11NaAiStd-yrHWHZZP_Kk0Iu1w")
devtools::install_github("dkahle/ggmap", ref = "tidyup")
devtools::install_github("dkahle/ggmap", ref = "tidyup")
register_google(key = "AIzaSyANIejhd11NaAiStd-yrHWHZZP_Kk0Iu1w")
library(ggmap)
register_google(key = "AIzaSyANIejhd11NaAiStd-yrHWHZZP_Kk0Iu1w")
myMap <- get_map(location="Chicago", source="osm")
myMap <- get_map(location="Chicago")
myMap <- get_map(location="Chicago", source = "osm")
register_google(key = "AIzaSyANIejhd11NaAiStd-yrHWHZZP_Kk0Iu1w")
myMap <- get_map(location="Chicago", source = "osm")
register_google(key = "AIzaSyANIejhd11NaAiStd-yrHWHZZP_Kk0Iu1w")
myMap <- get_map(location="Chicago", source = "osm")
register_google(key = "AIzaSyANIejhd11NaAiStd-yrHWHZZP_Kk0Iu1w")
myMap <- get_map(location="Chicago", source = "google")
library(ggmap)
register_google(key = "AIzaSyANIejhd11NaAiStd-yrHWHZZP_Kk0Iu1w")
myMap <- get_map(location="Chicago", source = "google")
library(ggmap)
register_google(key = "AIzaSyANIejhd11NaAiStd-yrHWHZZP_Kk0Iu1w")
myMap <- get_map(location="Chicago", source = "google")
myMap <- get_map(location="Chicago")
register_google(key = "AIzaSyDjGQGziK8dk7zmLk_JL02ugXVsV8l6RCI")
myMap <- get_map(location="Chicago")
?register_google
ggmap_show_api_key()
myMap <- get_map(location="Chicago")
ggmap_hide_api_key()
myMap <- get_map(location="Chicago")
ggmap(myMap)
?sliderInput
?checkboxGroupInput
enquo(2018)
dplyr::enquo(2018)
dplyr::enquo(as.character(2018))
enquo('2018')
dplyr::enquo('2018')
val <- 2018
dplyr::enquo(as.character(val))
dplyr::enquo(val)
paste0("yr_",2018)
quosure("sajndfln")
dplyr::quosure("sajndfln")
dplyr::quo(sym("aljsdf"))
sym("aljsdf")
dplyr::sym("aljsdf")
library(shiny)
library(ggmap)
register_google(key = "AIzaSyDjGQGziK8dk7zmLk_JL02ugXVsV8l6RCI")
myMap <- get_map(location="Chicago")
business_license_types <- unique(as.character(Chicago_Restaurants_and_Bars$business_activity))
station_coordinates_clean <- station_coordinates %>%
mutate(stationname = str_replace(location_name, " station chicago, IL","")) %>%
select(stationname, lat, lng)
inputPanel(
selectInput("bus_lic","Business License Type", choices = business_license_types, selected = "Consumption of Liquor on Premises"),
selectInput("station_display","Station Measurement", choices = c("Average Daily Ridership", "Percent Growth"), selected = "Average Daily Ridership"),
sliderInput("date_range", "Year Range", 2001, 2018, step = 1, value = c(2001, 2018),sep=""),
checkboxGroupInput("days", "", c("Weekend", "Weekday"),selected = c("Weekend", "Weekday"))
)
#
# renderDataTable({
#   business_license_plot_df <- Chicago_Restaurants_and_Bars %>%
#     filter(business_activity == input$bus_lic)
#
#   print(input$days)
#   print(input$date_range)
#   print(input$date_range[1])
#   print(input$date_range[2])
#
#   station_plot_df_step1 <- CTA_Ridership %>%
#     mutate(date = as.Date(parse_date_time(date, orders = "m/d/y"))) %>%
#     mutate(DOW = wday(date,label = T)) %>%
#     mutate(day_type = case_when(
#       DOW %in% c('Sat','Sun') ~ 'Weekend',
#       T ~ "Weekday"
#     )) %>%
#     inner_join(station_coordinates_clean) %>%
#     filter(day_type %in% input$days) %>%
#     filter(between(lubridate::year(date),input$date_range[1],input$date_range[2]))
#
#   if(input$station_display == "Average Daily Ridership"){
#     station_plot_df <- station_plot_df_step1 %>%
#       group_by(stationname,lat,lng) %>%
#       summarize(value = mean(rides))
#
#   } else{
#     min_year <- sym(paste0("yr_",input$date_range[1]))
#     max_year <- sym(paste0("yr_",input$date_range[2]))
#     min_year <- enquo(min_year)
#     max_year <- enquo(max_year)
#
#     print(min_year)
#     print(max_year)
#     station_plot_df <- station_plot_df_step1 %>%
#       mutate(year = year(date)) %>%
#       group_by(stationname,year,lat,lng) %>%
#       summarize(value = mean(rides)) %>%
#       filter(year %in% input$date_range) %>%
#       ungroup() %>%
#       mutate(year = paste0("yr_",year)) %>%
#       spread(year, value) %>%
#       mutate(value = (!!max_year-!!min_year)/!!min_year) %>%
#       select(stationname,lat,lng,value)
#   }
#
#
#  station_plot_df
# })
#
#
# renderDataTable({
#   business_license_plot_df <- Chicago_Restaurants_and_Bars %>%
#     filter(business_activity == input$bus_lic)
#
#   business_license_plot_df
# })
renderPlot({
business_license_plot_df <- Chicago_Restaurants_and_Bars %>%
filter(business_activity == input$bus_lic)
station_plot_df_step1 <- CTA_Ridership %>%
mutate(date = as.Date(parse_date_time(date, orders = "m/d/y"))) %>%
mutate(DOW = wday(date,label = T)) %>%
mutate(day_type = case_when(
DOW %in% c('Sat','Sun') ~ 'Weekend',
T ~ "Weekday"
)) %>%
inner_join(station_coordinates_clean) %>%
filter(day_type %in% input$days) %>%
filter(between(lubridate::year(date),input$date_range[1],input$date_range[2]))
if(input$station_display == "Average Daily Ridership"){
station_plot_df <- station_plot_df_step1 %>%
group_by(stationname,lat,lng) %>%
summarize(value = mean(rides))
} else{
min_year <- sym(paste0("yr_",input$date_range[1]))
max_year <- sym(paste0("yr_",input$date_range[2]))
min_year <- enquo(min_year)
max_year <- enquo(max_year)
station_plot_df <- station_plot_df_step1 %>%
mutate(year = year(date)) %>%
group_by(stationname,year,lat,lng) %>%
summarize(value = mean(rides)) %>%
filter(year %in% input$date_range) %>%
ungroup() %>%
mutate(year = paste0("yr_",year)) %>%
spread(year, value) %>%
mutate(value = (!!max_year-!!min_year)/!!min_year) %>%
select(stationname,lat,lng,value)
}
ggmap(myMap) +
geom_point(data = station_plot_df, aes(x = lng, y = lat,size = value),alpha = .5, color="darkred", size = 3)
})
library(shiny)
library(ggmap)
register_google(key = "AIzaSyDjGQGziK8dk7zmLk_JL02ugXVsV8l6RCI")
myMap <- get_map(location="Chicago")
business_license_types <- unique(as.character(Chicago_Restaurants_and_Bars$business_activity))
station_coordinates_clean <- station_coordinates %>%
mutate(stationname = str_replace(location_name, " station chicago, IL","")) %>%
select(stationname, lat, lng)
inputPanel(
selectInput("bus_lic","Business License Type", choices = business_license_types, selected = "Consumption of Liquor on Premises"),
selectInput("station_display","Station Measurement", choices = c("Average Daily Ridership", "Percent Growth"), selected = "Average Daily Ridership"),
sliderInput("date_range", "Year Range", 2001, 2018, step = 1, value = c(2001, 2018),sep=""),
checkboxGroupInput("days", "", c("Weekend", "Weekday"),selected = c("Weekend", "Weekday"))
)
#
# renderDataTable({
#   business_license_plot_df <- Chicago_Restaurants_and_Bars %>%
#     filter(business_activity == input$bus_lic)
#
#   print(input$days)
#   print(input$date_range)
#   print(input$date_range[1])
#   print(input$date_range[2])
#
#   station_plot_df_step1 <- CTA_Ridership %>%
#     mutate(date = as.Date(parse_date_time(date, orders = "m/d/y"))) %>%
#     mutate(DOW = wday(date,label = T)) %>%
#     mutate(day_type = case_when(
#       DOW %in% c('Sat','Sun') ~ 'Weekend',
#       T ~ "Weekday"
#     )) %>%
#     inner_join(station_coordinates_clean) %>%
#     filter(day_type %in% input$days) %>%
#     filter(between(lubridate::year(date),input$date_range[1],input$date_range[2]))
#
#   if(input$station_display == "Average Daily Ridership"){
#     station_plot_df <- station_plot_df_step1 %>%
#       group_by(stationname,lat,lng) %>%
#       summarize(value = mean(rides))
#
#   } else{
#     min_year <- sym(paste0("yr_",input$date_range[1]))
#     max_year <- sym(paste0("yr_",input$date_range[2]))
#     min_year <- enquo(min_year)
#     max_year <- enquo(max_year)
#
#     print(min_year)
#     print(max_year)
#     station_plot_df <- station_plot_df_step1 %>%
#       mutate(year = year(date)) %>%
#       group_by(stationname,year,lat,lng) %>%
#       summarize(value = mean(rides)) %>%
#       filter(year %in% input$date_range) %>%
#       ungroup() %>%
#       mutate(year = paste0("yr_",year)) %>%
#       spread(year, value) %>%
#       mutate(value = (!!max_year-!!min_year)/!!min_year) %>%
#       select(stationname,lat,lng,value)
#   }
#
#
#  station_plot_df
# })
#
#
# renderDataTable({
#   business_license_plot_df <- Chicago_Restaurants_and_Bars %>%
#     filter(business_activity == input$bus_lic)
#
#   business_license_plot_df
# })
renderPlot({
business_license_plot_df <- Chicago_Restaurants_and_Bars %>%
filter(business_activity == input$bus_lic)
station_plot_df_step1 <- CTA_Ridership %>%
mutate(date = as.Date(parse_date_time(date, orders = "m/d/y"))) %>%
mutate(DOW = wday(date,label = T)) %>%
mutate(day_type = case_when(
DOW %in% c('Sat','Sun') ~ 'Weekend',
T ~ "Weekday"
)) %>%
inner_join(station_coordinates_clean) %>%
filter(day_type %in% input$days) %>%
filter(between(lubridate::year(date),input$date_range[1],input$date_range[2]))
if(input$station_display == "Average Daily Ridership"){
station_plot_df <- station_plot_df_step1 %>%
group_by(stationname,lat,lng) %>%
summarize(value = mean(rides))
} else{
min_year <- sym(paste0("yr_",input$date_range[1]))
max_year <- sym(paste0("yr_",input$date_range[2]))
min_year <- enquo(min_year)
max_year <- enquo(max_year)
station_plot_df <- station_plot_df_step1 %>%
mutate(year = year(date)) %>%
group_by(stationname,year,lat,lng) %>%
summarize(value = mean(rides)) %>%
filter(year %in% input$date_range) %>%
ungroup() %>%
mutate(year = paste0("yr_",year)) %>%
spread(year, value) %>%
mutate(value = (!!max_year-!!min_year)/!!min_year) %>%
select(stationname,lat,lng,value)
}
ggmap(myMap) +
geom_point(data = station_plot_df, aes(x = lng, y = lat,size = value),alpha = .5, color="darkred")+
geom_point(data = business_license_plot_df, aes(x = lng, y = lat),alpha = .5, color="grey40", size = 1)
})
?get_map
library(shiny)
library(ggmap)
register_google(key = "AIzaSyDjGQGziK8dk7zmLk_JL02ugXVsV8l6RCI")
myMap <- get_map(location="Chicago",scale = 4, zoom = 11)
business_license_types <- unique(as.character(Chicago_Restaurants_and_Bars$business_activity))
station_coordinates_clean <- station_coordinates %>%
mutate(stationname = str_replace(location_name, " station chicago, IL","")) %>%
select(stationname, lat, lng)
inputPanel(
selectInput("bus_lic","Business License Type", choices = business_license_types, selected = "Consumption of Liquor on Premises"),
selectInput("station_display","Station Measurement", choices = c("Average Daily Ridership", "Percent Growth"), selected = "Average Daily Ridership"),
sliderInput("date_range", "Year Range", 2001, 2018, step = 1, value = c(2001, 2018),sep=""),
checkboxGroupInput("days", "", c("Weekend", "Weekday"),selected = c("Weekend", "Weekday"))
)
renderPlot({
business_license_plot_df <- Chicago_Restaurants_and_Bars %>%
filter(business_activity == input$bus_lic)
station_plot_df_step1 <- CTA_Ridership %>%
mutate(date = as.Date(parse_date_time(date, orders = "m/d/y"))) %>%
mutate(DOW = wday(date,label = T)) %>%
mutate(day_type = case_when(
DOW %in% c('Sat','Sun') ~ 'Weekend',
T ~ "Weekday"
)) %>%
inner_join(station_coordinates_clean) %>%
filter(day_type %in% input$days) %>%
filter(between(lubridate::year(date),input$date_range[1],input$date_range[2]))
if(input$station_display == "Average Daily Ridership"){
station_plot_df <- station_plot_df_step1 %>%
group_by(stationname,lat,lng) %>%
summarize(value = mean(rides))
} else{
min_year <- sym(paste0("yr_",input$date_range[1]))
max_year <- sym(paste0("yr_",input$date_range[2]))
min_year <- enquo(min_year)
max_year <- enquo(max_year)
station_plot_df <- station_plot_df_step1 %>%
mutate(year = year(date)) %>%
group_by(stationname,year,lat,lng) %>%
summarize(value = mean(rides)) %>%
filter(year %in% input$date_range) %>%
ungroup() %>%
mutate(year = paste0("yr_",year)) %>%
spread(year, value) %>%
mutate(value = (!!max_year-!!min_year)/!!min_year) %>%
select(stationname,lat,lng,value)
}
ggmap(myMap) +
geom_point(data = station_plot_df, aes(x = lng, y = lat,size = value),alpha = .5, color="darkred")+
geom_point(data = business_license_plot_df, aes(x = lng, y = lat),alpha = .5, color="grey40", size = .01) +
theme(
axis.title = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank()
)
})
ggmap::get_openstreetmap
?ggmap::get_openstreetmap
?ggmap::get_googlemap
?get_map
#
library(shiny)
library(ggmap)
register_google(key = "AIzaSyDjGQGziK8dk7zmLk_JL02ugXVsV8l6RCI")
myMap <- get_map(location="Chicago", zoom = 11,  filename = "chicago_map", scale = 2 )
business_license_types <- unique(as.character(Chicago_Restaurants_and_Bars$business_activity))
station_coordinates_clean <- station_coordinates %>%
mutate(stationname = str_replace(location_name, " station chicago, IL","")) %>%
select(stationname, lat, lng)
inputPanel(
selectInput("bus_lic","Business License Type", choices = business_license_types, selected = "Consumption of Liquor on Premises"),
selectInput("station_display","Station Measurement", choices = c("Average Daily Ridership", "Percent Growth"), selected = "Average Daily Ridership"),
sliderInput("date_range", "Year Range", 2001, 2018, step = 1, value = c(2001, 2018),sep=""),
checkboxGroupInput("days", "", c("Weekend", "Weekday"),selected = c("Weekend", "Weekday"))
)
renderPlot({
business_license_plot_df <- Chicago_Restaurants_and_Bars %>%
filter(business_activity == input$bus_lic)
station_plot_df_step1 <- CTA_Ridership %>%
mutate(date = as.Date(parse_date_time(date, orders = "m/d/y"))) %>%
mutate(DOW = wday(date,label = T)) %>%
mutate(day_type = case_when(
DOW %in% c('Sat','Sun') ~ 'Weekend',
T ~ "Weekday"
)) %>%
inner_join(station_coordinates_clean) %>%
filter(day_type %in% input$days) %>%
filter(between(lubridate::year(date),input$date_range[1],input$date_range[2]))
if(input$station_display == "Average Daily Ridership"){
station_plot_df <- station_plot_df_step1 %>%
group_by(stationname,lat,lng) %>%
summarize(value = mean(rides))
} else{
min_year <- sym(paste0("yr_",input$date_range[1]))
max_year <- sym(paste0("yr_",input$date_range[2]))
min_year <- enquo(min_year)
max_year <- enquo(max_year)
station_plot_df <- station_plot_df_step1 %>%
mutate(year = year(date)) %>%
group_by(stationname,year,lat,lng) %>%
summarize(value = mean(rides)) %>%
filter(year %in% input$date_range) %>%
ungroup() %>%
mutate(year = paste0("yr_",year)) %>%
spread(year, value) %>%
mutate(value = (!!max_year-!!min_year)/!!min_year) %>%
select(stationname,lat,lng,value)
}
ggmap(myMap) +
geom_point(data = station_plot_df, aes(x = lng, y = lat,size = value),alpha = .5, color="darkred")+
geom_point(data = business_license_plot_df, aes(x = lng, y = lat),alpha = .5, color="grey40", size = .01) +
theme(
axis.title = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank()
)
})
?ggmap::ggimage
ggmap(myMap)
ggmap(myMap) +
theme(
axis.title = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank()
)
ggmap(myMap) +
theme(
axis.title = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank()
)
library(tidyverse)
library(knitr)
CTA_Ridership <- read.csv("source_data/CTA_-_Ridership_-__L__Station_Entries_-_Daily_Totals.csv")
head(CTA_Ridership) %>% kable()
